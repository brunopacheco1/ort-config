# Copyright (C) 2022 The ORT Project Authors (see <https://github.com/oss-review-toolkit/ort/blob/main/NOTICE>)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

# A reference configuration file containing all possible ORT configuration options. Some of those options are mutually
# exclusive, so this file is only used to show all options and to validate the configuration.

ort:
  licenseFilePatterns:
    licenseFilenames:
    - "copying*"
    - "copyright"
    - "licence*"
    - "license*"
    - "*.licence"
    - "*.license"
    - "unlicence"
    - "unlicense"
    patentFilenames:
    - "patents"
    rootLicenseFilenames:
    - "readme*"
  severeIssueThreshold: "ERROR"
  severeRuleViolationThreshold: "ERROR"
  enableRepositoryPackageCurations: false
  enableRepositoryPackageConfigurations: false
  analyzer:
    allowDynamicVersions: true
    packageManagers:
      Gradle:
        mustRunAfter:
        - "NPM"
  downloader:
    allowMovingRevisions: true
    sourceCodeOrigins:
    - "VCS"
    - "ARTIFACT"
  scanner:
    skipConcluded: false
    archive:
      enabled: true
      fileStorage:
        httpFileStorage:
          url: "${HTTP_FILE_SERVER_URL}/storages/file-archives"
          headers:
            "X-JFrog-Art-Api": "${HTTP_FILE_SERVER_TOKEN}"
    createMissingArchives: true
    detectedLicenseMapping: {}
    options:
      ScanCode:
        commandLine: "--copyright --license --info --strip-root --timeout 300"
        parseLicenseExpressions: "true"
        minVersion: "31.2.0"
        maxVersion: "31.2.2"
    storages:
      http:
        backend:
          httpFileStorage:
            url: "${HTTP_FILE_SERVER_URL}/storages/scan-results"
            headers:
              "X-JFrog-Art-Api": "${HTTP_FILE_SERVER_TOKEN}"
        type: "PROVENANCE_BASED"
    storageReaders:
    - "http"
    storageWriters:
    - "http"
    ignorePatterns:
    - "**/NOTICE"
    - "**/META-INF/DEPENDENCIES"
    provenanceStorage:
      fileStorage:
        httpFileStorage:
          url: "${HTTP_FILE_SERVER_URL}/storages/provenances"
          headers:
            "X-JFrog-Art-Api": "${HTTP_FILE_SERVER_TOKEN}"

